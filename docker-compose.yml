services:
  qbittorrent:
    image: linuxserver/qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Taipei
      - UMASK_SET=022
      - WEBUI_PORT=8082
    volumes:
      - ./data/config:/config
      - ${BOOK_PATH}:/downloads
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
  book_manager:
    image: littleorange666/book_manager:1.2.12
    depends_on:
      qbittorrent:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    environment:
      - SERVER_PORT=5000
      - WEBUI_HOST=qbittorrent
      - WEBUI_PORT=8082
      - WEBUI_USER=admin
      - WEBUI_PASS=${WEBUI_PASSWORD}
      - ADMIN_KEY=${ADMIN_KEY}
      - MYSQL_DB=bookmanager
      - MYSQL_USER=bookmanageruser
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_HOST=mariadb:3306
    ports:
      - "6756:5000"
    volumes:
      - ./data:/app/data
      - ${BOOK_PATH}:/app/books
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import http.client; c=http.client.HTTPConnection('localhost', 5000); c.request('GET', '/'); r=c.getresponse(); exit(0) if r.status < 400 else exit(1)"]
      interval: 10s
      start_period: 10s
      timeout: 3s
      retries: 5
  mariadb:
    image: mariadb:11.8
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=bookmanager
      - MYSQL_USER=bookmanageruser
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./data/mariadb:/var/lib/mysql
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "mariadb", "--user=root", "--password=$DB_ROOT_PASSWORD","--database","bookmanager", "-e", "SELECT 1"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
  cloudflared:
    image: cloudflare/cloudflared:latest
    read_only: true
    restart: unless-stopped
    command: tunnel --url http://book_manager:5000 --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    depends_on:
      book_manager:
        condition: service_healthy